<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error_Admin_UserId_Rq" xml:space="preserve">
    <value>Vous devez être un utilisateur admin valide pour créer un contrat.</value>
  </data>
  <data name="Error_Form_Data" xml:space="preserve">
    <value>Saisissez toutes les données requises du formulaire!</value>
  </data>
  <data name="Error_Form_Req" xml:space="preserve">
    <value>Le formulaire est requis</value>
  </data>
  <data name="Error_Select_User" xml:space="preserve">
    <value>Vous devez sélectionner un utilisateur avant de continuer</value>
  </data>
  <data name="Error_Template_Creator_Rq" xml:space="preserve">
    <value>Pas d'utilisateur sélectionner pour le modèle</value>
  </data>
  <data name="Error_Template_Form_Rq" xml:space="preserve">
    <value>Vous devez sélectionner un formulaire pour le modèle.</value>
  </data>
  <data name="Error_Template_Name_Rq" xml:space="preserve">
    <value>Le nom du modèle est requis.</value>
  </data>
  <data name="Error_Template_Not_Found" xml:space="preserve">
    <value>Désolé, mais aucun modèle n'a été trouvé.</value>
  </data>
  <data name="Error_Template_Not_Selected" xml:space="preserve">
    <value>Vous devez sélectionner un modèle avant de procéder.</value>
  </data>
  <data name="Error_Template_Rq" xml:space="preserve">
    <value>Le modèle est requis.</value>
  </data>
  <data name="Error_User_Req" xml:space="preserve">
    <value>L'utilisateur est requis</value>
  </data>
  <data name="V_Contracts" xml:space="preserve">
    <value>Contrats</value>
  </data>
  <data name="V_Contract_Choose_User_Intro" xml:space="preserve">
    <value>Pour créer le contrat d'un employé, vous devez d'abord sélectionner l'employé dans la liste ci-dessous ou faire une recherche.&lt;br /&gt;
Une fois que l'employé a été trouvé, vous pouvez lui attribuer un contrat ou le modifier s'il existe.</value>
  </data>
  <data name="V_Contract_Details" xml:space="preserve">
    <value>Détails du contrat</value>
  </data>
  <data name="V_Contract_Edit" xml:space="preserve">
    <value>Modifier le contrat</value>
  </data>
  <data name="V_Contract_Management" xml:space="preserve">
    <value>Gestion de contrat</value>
  </data>
  <data name="V_Contract_Management_SelUser" xml:space="preserve">
    <value>Gestion de contrat (selection d'utilisateur)</value>
  </data>
  <data name="V_Contract_Saved" xml:space="preserve">
    <value>Contrat sauvegardé.</value>
  </data>
  <data name="V_Contract_Select_User" xml:space="preserve">
    <value>Sélectionner un utilisateur</value>
  </data>
  <data name="V_Created" xml:space="preserve">
    <value>Créér</value>
  </data>
  <data name="V_Created_By" xml:space="preserve">
    <value>Créér par</value>
  </data>
  <data name="V_Create_Form" xml:space="preserve">
    <value>Créér un fomulaire</value>
  </data>
  <data name="V_Create_Template" xml:space="preserve">
    <value>Créér un modèle</value>
  </data>
  <data name="V_Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="V_Edit_Template" xml:space="preserve">
    <value>Modifier le modèle</value>
  </data>
  <data name="V_Fill_Contract_Form" xml:space="preserve">
    <value>Remplire le formulaire de contrat</value>
  </data>
  <data name="V_Form" xml:space="preserve">
    <value>Formulaire</value>
  </data>
  <data name="V_Last_Updated" xml:space="preserve">
    <value>Dernière mise à jour</value>
  </data>
  <data name="V_Last_Updated_By" xml:space="preserve">
    <value>Dernière mise à jour par</value>
  </data>
  <data name="V_Make_Enquiry" xml:space="preserve">
    <value>Faire une demande</value>
  </data>
  <data name="V_My_Contract" xml:space="preserve">
    <value>Mon contrat</value>
  </data>
  <data name="V_New_Form" xml:space="preserve">
    <value>Nouveau formulaire</value>
  </data>
  <data name="V_No_Contract_Info" xml:space="preserve">
    <value>Désolé mais votre contrat n'est pas encore disponible. Pour plus d'info, contacter l'administration.</value>
  </data>
  <data name="V_Publish" xml:space="preserve">
    <value>Publier le contrat</value>
  </data>
  <data name="V_Publish_Info" xml:space="preserve">
    <value>Si vous publiez ce contrat, l'utilisateur sera en mesure d'afficher les détails.</value>
  </data>
  <data name="V_Save_Contract" xml:space="preserve">
    <value>Sauvegarder le contrat</value>
  </data>
  <data name="V_Save_Template" xml:space="preserve">
    <value>Sauvegarder le modèle</value>
  </data>
  <data name="V_Submit" xml:space="preserve">
    <value>Envoyer</value>
  </data>
  <data name="V_Template_Create" xml:space="preserve">
    <value>Création de modèle</value>
  </data>
  <data name="V_Template_Details" xml:space="preserve">
    <value>Details du modèle</value>
  </data>
  <data name="V_Template_Details_Intro" xml:space="preserve">
    <value>Un modèle de contrat est un formulaire qui doit être rempli par un utilisateur admin. 
L'employé ne peut voir un formulaire rempli comme son contrat une fois que le modèle a été joint au contrat. &lt;br/&gt; 
Si vous souhaitez joindre un formulaire existant à votre contrat en tant que modèle, Veuillez revenir au contrat 
et sélectionner un modèle de formulaire existant, puis fixez-le en conséquence. &lt;br/&gt; 
Cliquez sur le bouton ci-dessous pour ouvrir l'éditeur de formulaire et créer votre formulaire. Ca lancera une fenêtre popup.</value>
  </data>
  <data name="V_Template_Id" xml:space="preserve">
    <value>Id du  modèle</value>
  </data>
  <data name="V_Template_Name" xml:space="preserve">
    <value>Nom du  modèle</value>
  </data>
  <data name="V_User_Contract" xml:space="preserve">
    <value>Contrat de l'utilisateur</value>
  </data>
  <data name="V_User_Contract_Details" xml:space="preserve">
    <value>Détails du contrat pour '{0}'</value>
  </data>
  <data name="V_User_Name" xml:space="preserve">
    <value>Nom d'utilisateur</value>
  </data>
</root>