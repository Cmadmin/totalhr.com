@using totalhr.Resources
@using AH = totalhr.web.Areas.Admin.Helpers
@using totalhr.web.Areas.Admin.Models
@using totalhr.web.Helpers;
@using EF=totalhr.data.EF;

@model IEnumerable<totalhr.data.EF.Absence>

@{
    ViewBag.Title = Absence.V_Absences;
    
    var breadCrumbItems = new List<BreadCrumbItem>
    {
        new BreadCrumbItem{Url = "", Text = Absence.V_Absences, Title= Absence.V_Absences}
    };

    List<EF.Glossary> absenceTypeList = ViewBag.AbsenceTypeList as List<EF.Glossary>;   
}

@section pagetitle{
   @Absence.V_Absences
}

@section breadcrumb{
    @Html.Raw(AH.GenericHelper.MakeBreadCrumb(breadCrumbItems))
}


<div class="row-fluid">
    <div class="widget">
        <div class="widget-title">
            <h4><i class="icon-reorder"></i>@Absence.V_Absences_List</h4>
            <span class="tools">
                <a href="javascript:;" class="icon-chevron-down"></a>
            </span>
        </div>
        <div class="widget-body"> 

            @if (true)//absences != null && absences.Count > 0)
            {
            <table class="table table-striped table-bordered" id="sample_1">
                <thead>
                    <tr>
                       <th>@Absence.V_Absence_Type</th> 
                        <th>@Absence.V_StartDate</th>
                        <th>@Absence.V_End_Date</th>
                        <th>@Absence.V_Duration</th>                             
                        <th>@Absence.V_Reason</th>
                        <th>@Absence.V_Status</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var absence in Model)
                    {
                    <tr class="odd gradeX">                       
                        <td>
                            @absenceTypeList.FirstOrDefault(x => x.RootId == absence.TypeId).Term
                        </td>
                        <td>
                           @absence.StartDate.ToShortDateString()
                        </td>
                        <td>
                            @absence.EndDate.ToShortDateString()           
                        </td>
                        <td>
                           @(string.Format(Absence.V_Absence_Duration_In_Days,(absence.EndDate - absence.StartDate).TotalDays))
                        </td>                       
                        <td>
                           @totalhr.web.Helpers.GenericHelper.ShortenString(absence.Reason, 100)
                        </td>
                        <td>
                            <span class="label @AbsenceHelper.GetAbsenceStatusClass((totalhr.Shared.Variables.AbsenceRequestStatus)absence.StatusId)">
                                @totalhr.Shared.EnumExtensions.Description((totalhr.Shared.Variables.AbsenceRequestStatus)absence.StatusId)
                            </span>
                        </td>
                    </tr> 
           
                    }
                </tbody>
            </table>
            }else{
             <div class="alert alert-block alert-error fade in">@Absence.V_No_Absence_Found</div>
            }
           
        </div>
    </div>
</div>

 <div class="row-fluid">
    <button type="submit" class="btn btn-warning" onclick="NavigateTo('/Absence/CreateAbsence/');">
        <i class="icon-plus icon-white"></i> @Absence.V_Create_Absence
    </button>
</div>
