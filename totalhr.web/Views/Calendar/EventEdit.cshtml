@model totalhr.Shared.Models.CalendarEventInfo
@using System.Text
@using totalhr.Resources
@using totalhr.Shared
@{
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
    ViewBag.Title = "EventEdit";

    ViewBag.Title = "CalendarEventEdit";

    var lstDayHours = new List<string> { "00", "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23" };
    var lstDayMinutes = new List<string> { "00", "05", "10", "15", "20", "25", "30", "35", "40", "45", "50", "55" };

    var WeekDaysJS = ViewBag.WeekDaysJS;

    var sbJS = new StringBuilder();
    var sbAttendees = new StringBuilder();
    var sJSChosenTargetUsers = string.Empty;
    var sJSChosenTargeDepartments = string.Empty;

    string startTimeHour = string.Empty;
    string startTimeMin = string.Empty;
    string endTimeHour = string.Empty;
    string endTimeMin = string.Empty;

    if (Model.TargetAttendeeGroupId == (int)Variables.CalendarEventTarget.User)
    {
        sJSChosenTargetUsers = Model.InvitedUserIds;
    }
    else if (Model.TargetAttendeeGroupId == (int)Variables.CalendarEventTarget.Department)
    {
        sJSChosenTargeDepartments = Model.InvitedDepartmentIds;
    }

    if (Model.EventId > 0)
    {
        var tempStart = Model.StartTime.Split(':');
        var tempEnd = Model.EndTime.Split(':');

        startTimeHour = tempStart[0];
        startTimeMin = tempStart[1];
        endTimeHour = tempEnd[0];
        endTimeMin = tempEnd[1];
    }

    var dicoStartDate = new Dictionary<string, object>{ 
                            { "class", "datetype"},
                            {"data-beatpicker","true"},				                  
                            {"data-beatpicker-position","['*','*']"},
                            {"data-beatpicker-format","['DD','MM','YYYY'],separator:'/'"},
                            {"data-beatpicker-module","gotoDate,clear"},
                            {"data-beatpicker-id", "StartDate"}
                        };

    var dicoEndDate = new Dictionary<string, object>{ 
                            { "class", "datetype"},
                            {"data-beatpicker","true"},				                  
                            {"data-beatpicker-position","['*','*']"},
                            {"data-beatpicker-format","['DD','MM','YYYY'],separator:'/'"},
                            {"data-beatpicker-module","gotoDate,clear"},
                            {"data-beatpicker-id", "EndDate"}
                        };

    if (Model.EventId < 1)
    {
        dicoStartDate.Add("value", "");
        dicoEndDate.Add("value", "");
    }
}

@section extrastyles{
    @Styles.Render("~/Content/css/BeatPicker.min.css")
}

@{
    Html.RenderPartial("_FormScripts"); 
}


@section head2{
    <h2>@((Model.EventId > 0)? Common.Page_TT_Calendar_Event_Edit : Common.Page_TT_Calendar_Event_Add)</h2>
}
    
              
        <p>@Calendar.V_Calendar_Name: @Model.CalendarName</p>

        @{
            Html.RenderPartial("_CalendarEventEdit");
        }
    



