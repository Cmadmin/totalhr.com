@model totalhr.web.ViewModels.TaskSchedulerDetailsVM

@using totalhr.Resources
@using TH = totalhr.web.Helpers;
@using AH = totalhr.web.Areas.Admin.Helpers;
@using AM = totalhr.web.Areas.Admin.Models;

@{
    ViewBag.Title = Task.V_Search_Taks;

    var breadCrumbItems = new List<AM.BreadCrumbItem>
    {
        new AM.BreadCrumbItem{Url = "/Task/", Text = Task.V_Task_Scheduler, Title= Task.V_Task_Scheduler},
        new AM.BreadCrumbItem{Url = "/Task/Search/", Text = Task.V_Search_Taks, Title= Task.V_Search_Taks},
        new AM.BreadCrumbItem{Url = "", Text = Task.V_Task_Details, Title = Task.V_Task_Details}
    };

  
}

@section pagetitle{
   @Task.V_Task_Details
}

@section breadcrumb{
    @Html.Raw(AH.GenericHelper.MakeBreadCrumb(breadCrumbItems))
}


<div class="row-fluid">
     <div class="widget">
        <div class="widget-title">
            <h4><i class="icon-reorder"></i> @Task.V_Task_Details</h4>
            <span class="tools">
                <a href="javascript:;" class="icon-chevron-down"></a>
            </span>
        </div>
        <div class="widget-body">

            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.UserId)

            <div class="form-horizontal">
                <div class="control-group editor-label">
                    <label class="control-label">@Html.LabelFor(model => model.Name)</label>
                    <div class="controls">
                        <div>
                                @Html.DisplayFor(model => model.Name)
                        </div>
                    </div>
                </div> 
                       
                <div class="control-group editor-label">
                    <label class="control-label">@Html.LabelFor(model => model.Description)</label>
                    <div class="controls">
                        <div>
                              @Html.DisplayFor(model => model.Description)
                        </div>
                    </div>
                </div> 
            
                <div class="control-group editor-label">
                    <label class="control-label">@Html.LabelFor(model => model.ApprovalNeeded)</label>
                    <div class="controls">
                        <div>
                              @Html.DisplayFor(model => model.ApprovalNeeded)
                        </div>
                    </div>
                </div>             

                <div class="control-group editor-label">
                    <label class="control-label">@Html.LabelFor(model => model.ScheduledDateTime)</label>
                    <div class="controls">
                        <div>
                              @Html.DisplayFor(model => model.ScheduledDateTime)
                        </div>
                    </div>
                </div>             

                <div class="control-group editor-label">
                    <label class="control-label"> @Html.LabelFor(model => model.AssignedBy)</label>
                    <div class="controls">
                        <div>
                              @Html.DisplayFor(x => x.AssignedByUser)
                        </div>
                    </div>
                </div>    

                <div class="control-group editor-label">
                    <label class="control-label">@Html.LabelFor(model => model.AssignedTo)</label>
                    <div class="controls">
                        <div>
                               @Html.DisplayFor(x => x.AssignedToUser)
                        </div>
                    </div>
                </div> 

                <div class="control-group editor-label">
                    <label class="control-label">@Html.LabelFor(model => model.Department)</label>
                    <div class="controls">
                        <div>
                               @Html.DisplayFor(x => x.Department)
                        </div>
                    </div>
                </div> 
           </div>     

            @if (Model.TimeRecordings != null && Model.TimeRecordings.Any())
            {
                <fieldset>
                    <legend>Time Recordings</legend>
                    <table class="table table-striped table-bordered table-advance table-hover">
                        <tr>
                            <th>
                                @Task.V_Start_Time
                            </th>
                            <th>
                                @Task.V_End_Time
                            </th>
                            <th>
                               @Task.V_Duration_Recorded
                            </th>
                            <th></th>
                        </tr>
                        @foreach (var result in Model.TimeRecordings)
                        {
                            <tr class="display-field">
                                <td>
                                    @Html.DisplayFor(x => result.StartTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(x => result.EndTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(x => result.RecordedDuration)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "RecordTime", "TimeRecording", new { id = result.Id, typeId = 2, taskRef = Model.Id }, null)  
                                </td>
                            </tr>
                        }
                    </table>
                </fieldset>
            }
       @* <p>
            @Html.ActionLink("Edit", "Record", new { id = Model.Id }) |
            @Html.ActionLink("Add Time", "RecordTime", "TimeRecording", new { id = 0, typeId = 2, taskRef = Model.Id }, null) |
            @Html.ActionLink("Back to List", "Search")
        </p>*@

             <div class="form-actions">
                <button type="button" class="btn btn-warning" onclick="NavigateTo('/Task/Record/@Model.Id')"><i class="icon-edit icon-white"></i> @Task.V_Edit_Record</button>
                <button type="button" class="btn btn-success" onclick="NavigateTo('/TimeRecording/RecordTime/0?typeId=2&taskRef=@Model.Id')"><i class="icon-plus icon-white"></i> @Task.V_Add_Time</button>
                <button type="button" class="btn btn-danger" onclick="NavigateTo('/Task/Search/')"><i class="icon-remove icon-white"></i> @Task.V_Back_To_Search</button>

            </div>

        </div>
    </div>
</div>

