@model totalhr.web.ViewModels.TimeRecordingVM

@using totalhr.Resources
@using TH = totalhr.web.Helpers;
@using AH = totalhr.web.Areas.Admin.Helpers;
@using AM = totalhr.web.Areas.Admin.Models;

@{
    ViewBag.Title = Task.V_Time_Recording;

    string taskname = (ViewBag.TaskName == null) ? "" : ViewBag.TaskName;
    
    var title = !string.IsNullOrEmpty(taskname)? string.Format(TimeRecording.V_Time_Recording_For_Task, taskname) : "";
    var taskref = 0;

    Int32.TryParse(Request.QueryString["taskRef"], out taskref);
    
    var breadCrumbItems = new List<AM.BreadCrumbItem>
    {
        new AM.BreadCrumbItem{Url = "/Task/", Text = Task.V_Task_Scheduler, Title= Task.V_Task_Scheduler}, 
        new AM.BreadCrumbItem{Url = "", Text = Task.V_Time_Recording, Title = Task.V_Time_Recording}
    };

    if(taskref > 0){
        breadCrumbItems.Add(new AM.BreadCrumbItem
                {
                    Url = "/Task/Details/" + taskref,
                    Text = Task.V_Task_Details,
                    Title = Task.V_Task_Details
                }
            );
    }
  
}

@section pagetitle{
   @Task.V_Time_Recording
}

@section breadcrumb{
    @Html.Raw(AH.GenericHelper.MakeBreadCrumb(breadCrumbItems))
}

<div class="row-fluid">    
    <div class="widget">
            <div class="widget-title">
                <h4><i class="icon-reorder"></i>@title</h4>
                <span class="tools">
                    <a href="javascript:;" class="icon-chevron-down"></a>
                </span>
            </div>
            <div class="widget-body"> 

                @using (Html.BeginForm("RecordTime", "TimeRecording", FormMethod.Post, new { @class = "form-horizontal" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)

                    if (string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        
                            @Html.HiddenFor(model => model.Id)
                            @Html.HiddenFor(model => model.TypeId)
                            @Html.HiddenFor(model => model.TaskRef)
                            @Html.HiddenFor(model => model.UserId)

                              <div class="control-group editor-label">
                                    <label class="control-label">
                                        @Html.LabelFor(model => model.StartTime)
                                    </label>
                                    <div class="controls">
                                        <div class="input-append editor-field">                               
                                            @Html.TextBoxFor(x => x.StartTime, "", new { @class = "datetype", onclick = "javascript:NewCal('StartTime','ddmmyyyy',true,24)" })
                                            @Html.ValidationMessageFor(model => model.StartTime)
                                        </div>
                                    </div>
                              </div> 
                            
                            <div class="control-group editor-label">
                                    <label class="control-label">
                                @Html.LabelFor(model => model.EndTime)
                             </label>
                                    <div class="controls">
                                        <div class="input-append editor-field"> 
                                            @Html.TextBoxFor(x => x.EndTime, "", new { @class = "datetype", onclick = "javascript:NewCal('EndTime','ddmmyyyy',true,24)" })
                                            @Html.ValidationMessageFor(model => model.EndTime)
                                      </div>
                                    </div>
                            </div>

                            <p>
                                 <button type="submit" class="btn btn-success">
                                     <i class="icon-ok icon-white"></i> @TimeRecording.V_Save
                                 </button>
                                &nbsp;
                                <button type="button" class="btn btn-danger" onclick="NavigateTo('/TimeRecording/');">
                                    <i class="icon-remove icon-white"></i> @TimeRecording.V_Back_To_Options
                                </button>
                            </p>
                       


                        if (Model.TaskRef != null)
                        {
                            <div>
                                @Html.ActionLink(TimeRecording.V_Back_To_Task_Details, "Details", "Task", new { id = Model.TaskRef }, null)
                            </div>
                        }
                        else
                        {
                            <p>
                                @if (Model.Id > 0)
                                {
                                    @Html.ActionLink(TimeRecording.V_Back_To_Details, "Details", new { id = Model.Id }) 
                                    @Html.Raw("|")

                                }
                                @*@Html.ActionLink(TimeRecording.V_Back_To_Options, "Index")*@
                            </p>

                        }

                    }
                    else
                    {
                        <div class="error-message">
                            @Html.DisplayFor(model => model.ErrorMessage)
                          @* <p> @Html.ActionLink(TimeRecording.V_Back_To_Options, "Index")</p>*@
                        </div>
                    }
                }

            </div>
        </div>   
</div>

@section scripts{
    <script type="text/javascript" src="/Scripts/Site/DatePicker.js"></script>
}