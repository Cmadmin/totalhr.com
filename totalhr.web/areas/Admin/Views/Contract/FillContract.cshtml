@using totalhr.Resources;
@using totalhr.data.EF;

@model GetUserContractDetails_Result

@{
    Layout = null;
    var schema = string.IsNullOrEmpty(Model.FormSchema) ? "''" : Model.FormSchema;
}

<!DOCTYPE html>
<html ng-app="myApp">

    <head>
        <link data-require="bootstrap-css@3.*" data-semver="3.2.0" rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" />
        <script data-require="angular.js@1.2.*" data-semver="1.2.25" src="https://code.angularjs.org/1.2.25/angular.js"></script>
        <script data-require="angular-sanitize@1.2.25" data-semver="1.2.25" src="https://code.angularjs.org/1.2.25/angular-sanitize.js"></script>
        <link data-require="angular-form-gen@0.0.1" data-semver="0.0.1" rel="stylesheet" href="https://cdn.rawgit.com/McNull/angular-form-gen/v0.0.1/dist/angular-form-gen.min.css" />
        <script data-require="angular-form-gen@0.0.1" data-semver="0.0.1" src="https://cdn.rawgit.com/McNull/angular-form-gen/v0.0.1/dist/angular-form-gen.min.js"></script>
        <script data-require="showdown@0.3.*" data-semver="0.3.1" src="http://cdnjs.cloudflare.com/ajax/libs/showdown/0.3.1/showdown.min.js"></script>
        <script data-require="angular-markdown-text@0.0.2" data-semver="0.0.2" src="https://cdn.rawgit.com/McNull/angular-markdown-text/v0.0.2/dist/angular-markdown-text.min.js"></script>
       
    </head>

    <script type="text/javascript">
        var myApp = angular.module('myApp', ['fg', 'ngSanitize', 'markdown']);           

        myApp.controller('MyController', function ($scope, schemaService) {

            $scope.errorMessage = '';

            $scope.mySchema = @Html.Raw(schema);
            $scope.FormId = @Model.FormId;
            $scope.ContractId = @Model.ContractId;
            $scope.UserId = @Model.CTUserId;
            $scope.FormTypeId = @Model.FormTypeId;
          
                
            $scope.myForm = {
                schema: $scope.mySchema,
                data : @Html.Raw(Model.CTData)
            };

            $scope.ShowAlert = function() {
                alert($scope.Publish);
            };
            
                $scope.SubmitFormInput = function () {
                   
                    var formData = $scope.myForm;
                    
                    schemaService.addSchema(
                        {
                            FormId: $scope.FormId,
                            ContractId : $scope.ContractId,
                            UserId :  $scope.UserId,
                            FormTypeId : $scope.FormTypeId,
                            Data: JSON.stringify(formData.data)
                        },
                        function(data) {
                            var message = data.Message;
                            alert(message);
                            $scope.errorMessage = '';
                        },
                        function(data, response) {
                            alert($('#hdnError').val());
                            $scope.errorMessage = $('#hdnError').val();
                        }
                    );

                };
              
            });

            // I act a repository for the remote friend collection.
            myApp.service(
                "schemaService",
                function($http, $q) {

                    // Return public API.
                    return ({
                        addSchema: addSchema
                    });

                    function addSchema(data, success, fail) {

                        $http({
                            method: 'POST',
                            url: "/Admin/Contract/SaveUserContractData",
                            data: data,
                            async: false,
                            dataType: "json"
                        })
                            .success(success)
                            .error(fail);
                    }
                }
            );
        
    </script>
     
    <body>
        <div ng-controller="MyController" class="container">
            
            
            <div class="error-message">
                
            </div>

            <form novalidate class="form-horizontal" name="previewForm" ng-init="myForm.$data = {}">

                <fieldset>

                    <legend>
                        <div class="row">
                            <div class="col-sm-offset-3">@Contract.V_Contract_Edit - <span class="uname">(@Model.CTUser)</span></div>
                        </div>
                    </legend>

                    <!-- Magic starts here -->

                    <div fg-form
                         fg-form-data="myForm.data"
                         fg-schema="myForm.schema">
                    </div>

                    <!-- Magic ends here -->

                </fieldset>

                <div class="form-group">
                    <label class="control-label col-sm-3">@FormGenerator.V_Form_Status</label>

                    <div class="col-sm-9">
                        <div class="form-control-static">
                            <span ng-if="previewForm.$invalid" class="text-danger">@FormGenerator.V_Invalid <span class="glyphicon glyphicon-thumbs-down"></span></span>
                            <span ng-if="previewForm.$valid" class="text-success">@FormGenerator.V_Valid <span class="glyphicon glyphicon-thumbs-up"></span></span>
                        </div>
                    </div>
                </div>
                
                <div class="form-group">
                    <label class="control-label col-sm-3">&nbsp;</label>

                    <div class="col-sm-9">
                        <input type="button" ng-disabled="previewForm.$invalid" value="@Contract.V_Submit" ng-click="SubmitFormInput()"/>
                    </div>
                </div>

            </form>
            
        </div>
        
        <input type="hidden" id="hdnError" value="@HttpUtility.HtmlEncode(Error.Error_Error)"/>
    </body>

</html>