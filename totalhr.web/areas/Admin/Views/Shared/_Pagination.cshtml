@using totalhr.web.Areas.Admin.Models;
@using totalhr.web.Helpers;
@using totalhr.core;
@using totalhr.Resources;

@model Pagination

@{
    BuildPaginationUrl urlBuilder = UrlBuilder.BuildPaginationUrlNoExtention;
    BuildPaginationItem itemBuilder = PaginationItemBuilder.BuildPageButton;
    
    var pagination = PaginationHelper.BuildPagination(Model, urlBuilder);    
    
    int higherBound = (pagination == null)? 0 : pagination.PageSize * pagination.CurrentPage;
    int lowerBound = (pagination == null) ? 0 : higherBound - pagination.PageSize + 1;
}

@if(pagination != null && higherBound > 0){
<div class="pagination">

    @if(pagination.TotalNoOfItems > 0){
        <p class="intro">
            @string.Format(Common.V_Showing_XtoY_OfZ, lowerBound, higherBound, pagination.TotalNoOfItems)
        </p>
    }

    @if(!string.IsNullOrEmpty(pagination.PrevLink)){
        @Html.Raw(itemBuilder.Invoke(pagination.PrevLink, "&lt;&lt;" + Common.V_Prev, "", @" Paginate('" + pagination.PrevLink + "');"))        
    }

    @foreach (var page in pagination.AllPages)
    {
        var sel = page.Selected? "selected" : "";        
        @Html.Raw(itemBuilder.Invoke(page.Link, page.PageNumber.ToString(), sel, @" Paginate('" + page.Link + "');"))
    }

    @if(!string.IsNullOrEmpty(pagination.NextLink)){       
        @Html.Raw(itemBuilder.Invoke(pagination.NextLink, Common.V_Next + "&gt;&gt;", "", @" Paginate('" + pagination.NextLink + "');"))
    }

</div>
}