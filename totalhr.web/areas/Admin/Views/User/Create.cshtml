@model totalhr.Shared.Models.NewEmployeeInfo
@using totalhr.Resources;
@using totalhr.Shared.Models
@using totalhr.data.EF;

@{
    ViewBag.Title = Common.Page_TT_Header_Registration;


    var languages = ViewBag.LanguageList as List<Glossary>;
    var genders = ViewBag.GenderList as List<Glossary>;
    var countries = ViewBag.CountryList as List<Glossary>;
    var titles = ViewBag.TitleList as List<Glossary>;
    var departmentList = ViewBag.DepartmentList as List<ListItemStruct>;
}

@{Html.RenderPartial("_FormScripts");}



<div class="container">

<h1>@Common.Page_TT_Registration</h1>

@using (Html.BeginForm("Create", "User"))
    {

         @Html.ValidationSummary()
         @Html.HiddenFor(x => x.CompanyId)

        <div class="formdiv midform">
            <div class="wrapper">

                 <fieldset>
               <legend>@FormMessages.Title_Personal_Details</legend>
                
                <div class="line">
                    <label>@FormMessages.Label_Gender</label>
                     <span>@Html.DropDownListFor(x => x.GenderId,  new SelectList(genders, "RootId", "Term"))</span>
                    <span class="req">*</span>
                </div>
                 <div class="line">
                    <label>@FormMessages.Label_Title</label>
                     <span>@Html.DropDownListFor(x => x.Title, new SelectList(titles, "RootId", "Term"), 
                        new { onchange = string.Format("CheckOther(this, 'spOther', {0})", (int)totalhr.Shared.Variables.NamedGlossaryIds.OtherTitle) })
                         &nbsp;
                        <span id="spOther" style="display:none">@Html.TextBoxFor(x => x.OtherTitle , new { size = "20", maxlength = "30" })</span>
                     </span>
                    <span class="req">*</span>
                </div>
                 <div class="line">
                    <label>@FormMessages.Label_First_Name</label>
                    <span>@Html.TextBoxFor(x => x.FirstName , new { size = "45", maxlength = "50" })</span>
                    <span class="req">*</span>
                </div>
                 <div class="line">
                    <label>@FormMessages.Label_MiddleName</label>
                     <span>@Html.TextBoxFor(x => x.MiddleNames, new {size="45", maxlength="50"})</span>
                    <span class="req"></span>
                </div>
                 <div class="line">
                    <label>@FormMessages.Label_Last_Name</label>
                    <span>@Html.TextBoxFor(x => x.Surname , new { size = "45", maxlength = "50" })</span>
                    <span class="req">*</span>
                </div>
                <div class="line">
                    <label>@FormMessages.Label_Email</label>
                    <span>@Html.TextBoxFor(x => x.Email , new { size = "45", maxlength = "150" })</span>
                    <span class="req">*</span>
                </div>                
                
                <div class="line">
                    <label>@FormMessages.Label_Address</label>
                    <span>@Html.TextBoxFor(x => x.Address1 , new { size = "45", maxlength = "250" })</span>
                    <span class="req">*</span>
                </div>
                 <div class="line">
                    <label>&nbsp;</label>
                    <span>@Html.TextBoxFor(x => x.Address2 , new { size = "45", maxlength = "250" })</span>
                    <span class="req"></span>
                </div>
                 <div class="line">
                    <label>&nbsp;</label>
                    <span>@Html.TextBoxFor(x => x.Address3 , new { size = "45", maxlength = "250" })</span>
                    <span class="req"></span>
                </div>
                 <div class="line">
                    <label>@FormMessages.Label_City</label>
                    <span>@Html.TextBoxFor(x => x.City , new { size = "20", maxlength = "50" })</span>
                    <span class="req">*</span>
                </div>
                <div class="line" >
                    <label>@FormMessages.Label_State</label>
                    <span>@Html.TextBoxFor(x => x.State , new { size = "20", maxlength = "50" })</span>
                    <span class="req"></span>
                </div>
                <div class="line">
                    <label>@FormMessages.Label_PostCode</label>
                    <span>@Html.TextBoxFor(x => x.PostCode , new { size = "10", maxlength = "20" })</span>
                    <span class="req"></span>
                </div>
                <div class="line">
                    <label>@FormMessages.Label_Country</label>
                    <span>@Html.DropDownListFor(x => x.CountryId,  new SelectList(countries, "RootId", "Term"))</span>
                    <span class="req">*</span>
                </div>
                 <div class="line">
                    <label>@FormMessages.Label_Phone</label>
                    <span>@Html.TextBoxFor(x => x.PersonalPhone, new { size = "20", maxlength = "20" })</span>
                    <span class="req">*</span>
                </div>
                 <div class="line">
                    <label>@FormMessages.Label_Mobile</label>
                    <span>@Html.TextBoxFor(x => x.MobilePhone, new { size = "20", maxlength = "20" })</span>
                    <span class="req"></span>
                </div>
                <div class="line">
                    <label>@FormMessages.Label_Department</label>
                    <span>@Html.DropDownListFor(x => x.DepartmentId,  new SelectList(departmentList, "Id", "Name"))</span>
                    <span class="req">*</span>
                </div>
                </fieldset>
                
                <fieldset>

                <legend>@FormMessages.Title_Logon_Details</legend>

                 <div class="line">
                    <label>@FormMessages.Label_Username</label>
                    <span>@Html.TextBoxFor(x => x.UserName , new { size = "20", maxlength = "20", autocomplete ="off" })

                        @Html.CheckBoxFor(x => x.UseEmailAsUserName, new { onclick = "PullTextFrom(this, 'UserName', 'Email', 'hdnMSGEmailNotProvided')" }) &nbsp;
                        (@FormMessages.V_User_Email_As_UserName)

                        <input type="hidden" id="hdnMSGEmailNotProvided" value="@FormMessages.Error_Email_Needs_To_Be_Provided" />
                    </span>
                    <span class="req">*</span>
                </div>
                <div class="line">
                    <label>@FormMessages.Label_Password</label>
                    <span>@Html.PasswordFor(x => x.Password , new { size = "20", maxlength = "15", autocomplete ="off" })</span>
                    <span class="req">*</span>
                </div>
                <div class="line">
                    <label>@FormMessages.Label_Password_Confirm</label>
                    <span>@Html.PasswordFor(x => x.PasswordConfirm , new { size = "20", maxlength = "15", autocomplete ="off" })</span>
                    <span class="req">*</span>
                </div>                
                 <div class="line">
                    <label>@FormMessages.Label_Pref_Language</label>
                    <span>@Html.DropDownListFor(x => x.PreferedLanguageId,  new SelectList(languages, "RootId", "Term"))</span>
                    <span class="req"></span>
                </div>
                
                </fieldset>

                 <div class="line">
                    <label>&nbsp;</label>
                    <span>
                        <input type="button" value="@FormMessages.btn_Cancel" onclick="javascript: history.back(-1);" /> &nbsp;
                        <input type="submit" value="@FormMessages.btn_Register" /></span>
                    <span class="req"></span>
                </div>
                <div class="line">&nbsp;</div>

            </div>
        </div>
}

</div>
